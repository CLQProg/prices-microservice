<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>es.technical.test.microservices</groupId>
    <artifactId>prices-microservice</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>prices</name>
    <description>Technical test solution</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>17</java.version>
        <!-- SPRING BOOT -->
        <spring-boot.version>3.2.4</spring-boot.version>
        <!-- MAVEN -->
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <maven.compiler.release>17</maven.compiler.release>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
        <maven-jar-plugin.version>3.1.0</maven-jar-plugin.version>
        <dependency-check-maven.version>9.0.10</dependency-check-maven.version>
        <!-- DB -->
        <flyway.version>9.0.1</flyway.version>
        <!-- OPENAPI -->
        <springfox.version>3.0.0</springfox.version>
        <openapitools-jackson.version>0.2.1</openapitools-jackson.version>
        <swagger-annotations.version>2.2.16</swagger-annotations.version>
        <springdoc-openapi-starter-webmvc-ui.version>2.2.0</springdoc-openapi-starter-webmvc-ui.version>
        <!-- MAPPERS -->
        <org.mapstruct.version>1.4.2.Final</org.mapstruct.version>
        <!-- TOOLS -->
        <lombok.version>1.18.24</lombok.version>
        <lombok.mapstruct.binding.version>0.2.0</lombok.mapstruct.binding.version>
        <!-- UT TESTING -->
        <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <podam.version>7.2.3.RELEASE</podam.version>
        <surefire.jacoco.args/>
        <!-- IT TESTING -->
        <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
        <cucumber.version>4.7.1</cucumber.version>
        <failsafe.jacoco.args/>
        <skipTests>true</skipTests>
        <!-- ANALYSIS -->
        <maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>
        <checkstyle.version>10.3.1</checkstyle.version>
        <spotbugs-maven-plugin.version>4.7.1.0</spotbugs-maven-plugin.version>
        <sonar-maven-plugin.version>3.6.0.1398</sonar-maven-plugin.version>
        <maven-pmd-plugin.version>3.12.0</maven-pmd-plugin.version>
        <sonar.coverage.jacoco.xmlReportPaths>
            target/site/jacoco/merged-test-coverage-report/jacoco.xml
        </sonar.coverage.jacoco.xmlReportPaths>
        <sonar.exclusions>**/*generated*</sonar.exclusions>
        <!-- MONITORING -->
        <logstash-logback-encoder.version>7.3</logstash-logback-encoder.version>
        <log4j2.version>2.17.1</log4j2.version>
    </properties>

    <dependencies>

        <!-- SPRING MODULE -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- DB MODULE -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>${flyway.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- OPENAPI MODULE -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox.version}</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-annotations.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>${openapitools-jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc-openapi-starter-webmvc-ui.version}</version>
        </dependency>

        <!-- MAPPERS MODULE -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>

        <!-- TOOLS -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

        <!-- TESTING MODULE -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
        </dependency>
        <dependency>
            <groupId>uk.co.jemos.podam</groupId>
            <artifactId>podam</artifactId>
            <version>${podam.version}</version>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>${cucumber.version}</version>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>${cucumber.version}</version>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-spring</artifactId>
            <version>${cucumber.version}</version>
        </dependency>
        <!-- MONITORING MODULE -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash-logback-encoder.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-bom</artifactId>
                <version>${log4j2.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <!-- Import supported spring boot dependencies -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Maven plugins -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>default-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>test</goal>
                            </goals>
                            <configuration>
                                <includes>
                                    <include>**/ut/**/*</include>
                                </includes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                        <release>${maven.compiler.release}</release>
                        <encoding>${maven.compiler.encoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>
                <!-- Default spring boot plugin and configuration -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Default coverage plugin and configuration -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <configuration>
                        <excludes>
                            <exclude>**/openapi/**</exclude>
                            <exclude>es.technical.test.microservices.prices.PricesApplication</exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>jacoco-prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>coverage-check</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>report</goal>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <rule>
                                        <element>BUNDLE</element>
                                        <limits>
                                            <limit>
                                                <counter>INSTRUCTION</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>70%</minimum>
                                            </limit>
                                        </limits>
                                    </rule>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Default checkstyle plugin and configuration -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!-- Default sonar plugin and configuration -->
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>sonar-analysis</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>sonar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Java bugs analysis -->
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>${dependency-check-maven.version}</version>
                    <configuration>
                        <failBuildOnAnyVulnerability>true</failBuildOnAnyVulnerability>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${spotbugs-maven-plugin.version}</version>
                    <configuration>
                        <effort>Max</effort>
                        <threshold>Low</threshold>
                        <failOnError>true</failOnError>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>compile</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven-pmd-plugin.version}</version>
                    <configuration>
                        <rulesets>
                            <!-- See https://github.com/googleapis/google-cloud-java/blob/master/pmd.xml -->
                            <rule ref="rulesets/java/design.xml/AbstractClassWithoutAbstractMethod"/>
                            <rule ref="rulesets/java/design.xml/AbstractClassWithoutAnyMethod"/>
                            <rule ref="rulesets/java/optimizations.xml/AddEmptyString"/>
                            <rule ref="rulesets/java/strings.xml/AppendCharacterWithChar"/>
                            <rule ref="rulesets/java/sunsecure.xml/ArrayIsStoredDirectly"/>
                            <rule ref="rulesets/java/design.xml/AssignmentToNonFinalStatic"/>
                            <rule ref="rulesets/java/controversial.xml/AvoidAccessibilityAlteration"/>
                            <rule ref="rulesets/java/optimizations.xml/AvoidArrayLoops"/>
                            <rule ref="rulesets/java/migrating.xml/AvoidAssertAsIdentifier"/>
                            <rule ref="rulesets/xsl/xpath.xml/AvoidAxisNavigation"/>
                            <rule ref="rulesets/java/basic.xml/AvoidBranchingStatementAsLastInLoop"/>
                            <rule ref="rulesets/java/finalizers.xml/AvoidCallingFinalize"/>
                            <rule ref="rulesets/java/strictexception.xml/AvoidCatchingNPE"/>
                            <rule ref="rulesets/java/strictexception.xml/AvoidCatchingThrowable"/>
                            <rule ref="rulesets/java/design.xml/AvoidConstantsInterface"/>
                            <rule ref="rulesets/java/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor"/>
                            <rule ref="rulesets/java/design.xml/AvoidDeeplyNestedIfStmts"/>
                            <rule ref="rulesets/vm/basic.xml/AvoidDeeplyNestedIfStmts"/>
                            <rule ref="rulesets/java/naming.xml/AvoidDollarSigns"/>
                            <rule ref="rulesets/java/strings.xml/AvoidDuplicateLiterals"/>
                            <rule ref="rulesets/java/migrating.xml/AvoidEnumAsIdentifier"/>
                            <rule ref="rulesets/java/controversial.xml/AvoidFinalLocalVariable"/>
                            <rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause"/>
                            <rule ref="rulesets/java/strictexception.xml/AvoidLosingExceptionInformation"/>
                            <rule ref="rulesets/java/basic.xml/AvoidMultipleUnaryOperators"/>
                            <rule ref="rulesets/java/controversial.xml/AvoidPrefixingMethodParameters"/>
                            <rule ref="rulesets/java/logging-java.xml/AvoidPrintStackTrace"/>
                            <rule ref="rulesets/java/design.xml/AvoidProtectedFieldInFinalClass"/>
                            <rule ref="rulesets/java/design.xml/AvoidProtectedMethodInFinalClassNotExtending"/>
                            <rule ref="rulesets/java/design.xml/AvoidReassigningParameters"/>
                            <rule ref="rulesets/vm/basic.xml/AvoidReassigningParameters"/>
                            <rule ref="rulesets/java/strictexception.xml/AvoidRethrowingException"/>
                            <rule ref="rulesets/java/strings.xml/AvoidStringBufferField"/>
                            <rule ref="rulesets/java/design.xml/AvoidSynchronizedAtMethodLevel"/>
                            <rule ref="rulesets/java/basic.xml/AvoidThreadGroup"/>
                            <rule ref="rulesets/java/strictexception.xml/AvoidThrowingNewInstanceOfSameException"/>
                            <rule ref="rulesets/java/strictexception.xml/AvoidThrowingNullPointerException"/>
                            <rule ref="rulesets/java/strictexception.xml/AvoidThrowingRawExceptionTypes"/>
                            <rule ref="rulesets/ecmascript/basic.xml/AvoidTrailingComma"/>
                            <rule ref="rulesets/java/basic.xml/AvoidUsingHardCodedIP"/>
                            <rule ref="rulesets/java/controversial.xml/AvoidUsingNativeCode"/>
                            <rule ref="rulesets/java/basic.xml/AvoidUsingOctalValues"/>
                            <rule ref="rulesets/java/controversial.xml/AvoidUsingShortType"/>
                            <rule ref="rulesets/java/controversial.xml/AvoidUsingVolatile"/>
                            <rule ref="rulesets/java/design.xml/BadComparison"/>
                            <rule ref="rulesets/java/basic.xml/BigIntegerInstantiation"/>
                            <rule ref="rulesets/java/naming.xml/BooleanGetMethodName"/>
                            <rule ref="rulesets/java/basic.xml/BooleanInstantiation"/>
                            <rule ref="rulesets/java/controversial.xml/BooleanInversion"/>
                            <rule ref="rulesets/java/basic.xml/BrokenNullCheck"/>
                            <rule ref="rulesets/java/migrating.xml/ByteInstantiation"/>
                            <rule ref="rulesets/java/android.xml/CallSuperFirst"/>
                            <rule ref="rulesets/java/android.xml/CallSuperLast"/>
                            <rule ref="rulesets/java/basic.xml/CheckResultSet"/>
                            <rule ref="rulesets/java/basic.xml/CheckSkipResult"/>
                            <rule ref="rulesets/java/basic.xml/ClassCastExceptionWithToArray"/>
                            <rule ref="rulesets/java/naming.xml/ClassNamingConventions"/>
                            <rule ref="rulesets/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal"/>
                            <rule ref="rulesets/java/clone.xml/CloneMethodMustImplementCloneable"/>
                            <rule ref="rulesets/java/clone.xml/CloneThrowsCloneNotSupportedException"/>
                            <rule ref="rulesets/java/design.xml/CloseResource"/>
                            <rule ref="rulesets/java/basic.xml/CollapsibleIfStatements"/>
                            <rule ref="rulesets/vm/basic.xml/CollapsibleIfStatements"/>
                            <rule ref="rulesets/java/comments.xml/CommentContent"/>
                            <rule ref="rulesets/java/design.xml/CompareObjectsWithEquals"/>
                            <rule ref="rulesets/java/strings.xml/ConsecutiveAppendsShouldReuse"/>
                            <rule ref="rulesets/java/strings.xml/ConsecutiveLiteralAppends"/>
                            <rule ref="rulesets/ecmascript/basic.xml/ConsistentReturn"/>
                            <rule ref="rulesets/java/design.xml/ConstructorCallsOverridableMethod"/>
                            <rule ref="rulesets/java/design.xml/DefaultLabelNotLastInSwitchStmt"/>
                            <rule ref="rulesets/java/controversial.xml/DoNotCallGarbageCollectionExplicitly"/>
                            <rule ref="rulesets/java/j2ee.xml/DoNotCallSystemExit"/>
                            <rule ref="rulesets/java/strictexception.xml/DoNotExtendJavaLangError"/>
                            <rule ref="rulesets/java/android.xml/DoNotHardCodeSDCard"/>
                            <rule ref="rulesets/java/strictexception.xml/DoNotThrowExceptionInFinally"/>
                            <rule ref="rulesets/java/j2ee.xml/DoNotUseThreads"/>
                            <rule ref="rulesets/java/basic.xml/DontCallThreadRun"/>
                            <rule ref="rulesets/java/imports.xml/DontImportJavaLang"/>
                            <rule ref="rulesets/java/controversial.xml/DontImportSun"/>
                            <rule ref="rulesets/jsp/basic-jsf.xml/DontNestJsfInJstlIteration"/>
                            <rule ref="rulesets/java/basic.xml/DontUseFloatTypeForLoopIndices"/>
                            <rule ref="rulesets/java/basic.xml/DoubleCheckedLocking"/>
                            <rule ref="rulesets/java/imports.xml/DuplicateImports"/>
                            <rule ref="rulesets/jsp/basic.xml/DuplicateJspImports"/>
                            <rule ref="rulesets/java/finalizers.xml/EmptyFinalizer"/>
                            <rule ref="rulesets/java/empty.xml/EmptyFinallyBlock"/>
                            <rule ref="rulesets/java/empty.xml/EmptyCatchBlock">
                                <properties>
                                    <property name="allowCommentedBlocks" value="true"/>
                                </properties>
                            </rule>
                            <rule ref="rulesets/vm/basic.xml/EmptyForeachStmt"/>
                            <rule ref="rulesets/java/empty.xml/EmptyIfStmt"/>
                            <rule ref="rulesets/vm/basic.xml/EmptyIfStmt"/>
                            <rule ref="rulesets/java/empty.xml/EmptyInitializer"/>
                            <rule ref="rulesets/java/design.xml/EmptyMethodInAbstractClassShouldBeAbstract"/>
                            <rule ref="rulesets/java/empty.xml/EmptyStatementBlock"/>
                            <rule ref="rulesets/java/empty.xml/EmptyStatementNotInLoop"/>
                            <rule ref="rulesets/java/empty.xml/EmptyStaticInitializer"/>
                            <rule ref="rulesets/java/empty.xml/EmptySwitchStatements"/>
                            <rule ref="rulesets/java/empty.xml/EmptySynchronizedBlock"/>
                            <rule ref="rulesets/java/empty.xml/EmptyTryBlock"/>
                            <rule ref="rulesets/java/empty.xml/EmptyWhileStmt"/>
                            <rule ref="rulesets/ecmascript/basic.xml/EqualComparison"/>
                            <rule ref="rulesets/java/design.xml/EqualsNull"/>
                            <rule ref="rulesets/java/strictexception.xml/ExceptionAsFlowControl"/>
                            <rule ref="rulesets/java/codesize.xml/ExcessiveClassLength"/>
                            <rule ref="rulesets/java/coupling.xml/ExcessiveImports"/>
                            <rule ref="rulesets/plsql/codesize.xml/ExcessiveMethodLength"/>
                            <rule ref="rulesets/java/codesize.xml/ExcessiveMethodLength"/>
                            <rule ref="rulesets/plsql/codesize.xml/ExcessiveObjectLength"/>
                            <rule ref="rulesets/plsql/codesize.xml/ExcessivePackageBodyLength"/>
                            <rule ref="rulesets/plsql/codesize.xml/ExcessivePackageSpecificationLength"/>
                            <rule ref="rulesets/plsql/codesize.xml/ExcessiveParameterList"/>
                            <rule ref="rulesets/java/codesize.xml/ExcessiveParameterList"/>
                            <rule ref="rulesets/vm/basic.xml/ExcessiveTemplateLength"/>
                            <rule ref="rulesets/plsql/codesize.xml/ExcessiveTypeLength"/>
                            <rule ref="rulesets/java/basic.xml/ExtendsObject"/>
                            <rule ref="rulesets/java/design.xml/FieldDeclarationsShouldBeAtStartOfClass"/>
                            <rule ref="rulesets/java/design.xml/FinalFieldCouldBeStatic"/>
                            <rule ref="rulesets/java/finalizers.xml/FinalizeDoesNotCallSuperFinalize"/>
                            <rule ref="rulesets/java/finalizers.xml/FinalizeOnlyCallsSuperFinalize"/>
                            <rule ref="rulesets/java/finalizers.xml/FinalizeOverloaded"/>
                            <rule ref="rulesets/java/finalizers.xml/FinalizeShouldBeProtected"/>
                            <rule ref="rulesets/java/basic.xml/ForLoopShouldBeWhileLoop"/>
                            <rule ref="rulesets/java/braces.xml/ForLoopsMustUseBraces"/>
                            <rule ref="rulesets/ecmascript/braces.xml/ForLoopsMustUseBraces"/>
                            <rule ref="rulesets/java/naming.xml/GenericsNaming"/>
                            <rule ref="rulesets/ecmascript/basic.xml/GlobalVariable"/>
                            <rule ref="rulesets/java/logging-jakarta-commons.xml/GuardDebugLogging"/>
                            <rule ref="rulesets/java/logging-jakarta-commons.xml/GuardLogStatement"/>
                            <rule ref="rulesets/java/design.xml/IdempotentOperations"/>
                            <rule ref="rulesets/java/braces.xml/IfElseStmtsMustUseBraces"/>
                            <rule ref="rulesets/ecmascript/braces.xml/IfElseStmtsMustUseBraces"/>
                            <rule ref="rulesets/java/braces.xml/IfStmtsMustUseBraces"/>
                            <rule ref="rulesets/ecmascript/braces.xml/IfStmtsMustUseBraces"/>
                            <rule ref="rulesets/jsp/basic.xml/IframeMissingSrcAttribute"/>
                            <rule ref="rulesets/java/design.xml/ImmutableField"/>
                            <rule ref="rulesets/java/imports.xml/ImportFromSamePackage"/>
                            <rule ref="rulesets/java/strings.xml/InefficientEmptyStringCheck"/>
                            <rule ref="rulesets/java/strings.xml/InefficientStringBuffering"/>
                            <rule ref="rulesets/ecmascript/basic.xml/InnaccurateNumericLiteral"/>
                            <rule ref="rulesets/java/design.xml/InstantiationToGetClass"/>
                            <rule ref="rulesets/java/strings.xml/InsufficientStringBufferDeclaration"/>
                            <rule ref="rulesets/java/migrating.xml/IntegerInstantiation"/>
                            <rule ref="rulesets/java/migrating.xml/JUnit4SuitesShouldUseSuiteAnnotation"/>
                            <rule ref="rulesets/java/migrating.xml/JUnit4TestShouldUseAfterAnnotation"/>
                            <rule ref="rulesets/java/migrating.xml/JUnit4TestShouldUseBeforeAnnotation"/>
                            <rule ref="rulesets/java/migrating.xml/JUnit4TestShouldUseTestAnnotation"/>
                            <rule ref="rulesets/java/junit.xml/JUnitSpelling"/>
                            <rule ref="rulesets/java/junit.xml/JUnitStaticSuite"/>
                            <rule ref="rulesets/java/junit.xml/JUnitTestsShouldIncludeAssert"/>
                            <rule ref="rulesets/jsp/basic.xml/JspEncoding"/>
                            <rule ref="rulesets/java/basic.xml/JumbledIncrementer"/>
                            <rule ref="rulesets/java/j2ee.xml/LocalHomeNamingConvention"/>
                            <rule ref="rulesets/java/j2ee.xml/LocalInterfaceSessionNamingConvention"/>
                            <rule ref="rulesets/java/logging-java.xml/LoggerIsNotStaticFinal"/>
                            <rule ref="rulesets/java/design.xml/LogicInversion"/>
                            <rule ref="rulesets/java/migrating.xml/LongInstantiation"/>
                            <rule ref="rulesets/java/coupling.xml/LooseCoupling"/>
                            <rule ref="rulesets/java/coupling.xml/LoosePackageCoupling"/>
                            <rule ref="rulesets/java/j2ee.xml/MDBAndSessionBeanNamingConvention"/>
                            <rule ref="rulesets/java/naming.xml/MethodNamingConventions"/>
                            <rule ref="rulesets/java/sunsecure.xml/MethodReturnsInternalArray"/>
                            <rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass"/>
                            <rule ref="rulesets/java/naming.xml/MisleadingVariableName"/>
                            <rule ref="rulesets/java/basic.xml/MisplacedNullCheck"/>
                            <rule ref="rulesets/java/design.xml/MissingBreakInSwitch"/>
                            <rule ref="rulesets/java/javabeans.xml/MissingSerialVersionUID"/>
                            <rule ref="rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass"/>
                            <rule ref="rulesets/xml/basic.xml/MistypedCDATASection"/>
                            <rule ref="rulesets/java/logging-java.xml/MoreThanOneLogger"/>
                            <rule ref="rulesets/java/codesize.xml/NcssConstructorCount"/>
                            <rule ref="rulesets/plsql/codesize.xml/NcssMethodCount"/>
                            <rule ref="rulesets/java/codesize.xml/NcssMethodCount"/>
                            <rule ref="rulesets/plsql/codesize.xml/NcssObjectCount"/>
                            <rule ref="rulesets/java/codesize.xml/NcssTypeCount"/>
                            <rule ref="rulesets/jsp/basic.xml/NoClassAttribute"/>
                            <rule ref="rulesets/jsp/basic.xml/NoHtmlComments"/>
                            <rule ref="rulesets/vm/basic.xml/NoInlineJavaScript"/>
                            <rule ref="rulesets/jsp/basic.xml/NoInlineScript"/>
                            <rule ref="rulesets/jsp/basic.xml/NoInlineStyleInformation"/>
                            <rule ref="rulesets/vm/basic.xml/NoInlineStyles"/>
                            <rule ref="rulesets/jsp/basic.xml/NoJspForward"/>
                            <rule ref="rulesets/jsp/basic.xml/NoLongScripts"/>
                            <rule ref="rulesets/java/naming.xml/NoPackage"/>
                            <rule ref="rulesets/jsp/basic.xml/NoScriptlets"/>
                            <rule ref="rulesets/jsp/basic.xml/NoUnsanitizedJSPExpression"/>
                            <rule ref="rulesets/java/design.xml/NonCaseLabelInSwitchStatement"/>
                            <rule ref="rulesets/java/design.xml/NonStaticInitializer"/>
                            <rule ref="rulesets/java/design.xml/NonThreadSafeSingleton"/>
                            <rule ref="rulesets/java/controversial.xml/OneDeclarationPerLine"/>
                            <rule ref="rulesets/java/design.xml/OptimizableToArrayCall"/>
                            <rule ref="rulesets/java/basic.xml/OverrideBothEqualsAndHashcode"/>
                            <rule ref="rulesets/java/naming.xml/PackageCase"/>
                            <rule ref="rulesets/java/design.xml/PositionLiteralsFirstInCaseInsensitiveComparisons"/>
                            <rule ref="rulesets/java/design.xml/PositionLiteralsFirstInComparisons"/>
                            <rule ref="rulesets/java/optimizations.xml/PrematureDeclaration"/>
                            <rule ref="rulesets/java/design.xml/PreserveStackTrace"/>
                            <rule ref="rulesets/java/clone.xml/ProperCloneImplementation"/>
                            <rule ref="rulesets/java/logging-jakarta-commons.xml/ProperLogger"/>
                            <rule ref="rulesets/java/optimizations.xml/RedundantFieldInitializer"/>
                            <rule ref="rulesets/java/j2ee.xml/RemoteInterfaceNamingConvention"/>
                            <rule ref="rulesets/java/j2ee.xml/RemoteSessionInterfaceNamingConvention"/>
                            <rule ref="rulesets/java/migrating.xml/ReplaceEnumerationWithIterator"/>
                            <rule ref="rulesets/java/migrating.xml/ReplaceHashtableWithMap"/>
                            <rule ref="rulesets/java/migrating.xml/ReplaceVectorWithList"/>
                            <rule ref="rulesets/java/design.xml/ReturnEmptyArrayRatherThanNull"/>
                            <rule ref="rulesets/java/basic.xml/ReturnFromFinallyBlock"/>
                            <rule ref="rulesets/ecmascript/basic.xml/ScopeForInVariable"/>
                            <rule ref="rulesets/java/naming.xml/ShortClassName">
                                <properties>
                                    <property name="minimum" value="3"/>
                                </properties>
                            </rule>
                            <rule ref="rulesets/java/migrating.xml/ShortInstantiation"/>
                            <rule ref="rulesets/java/strictexception.xml/SignatureDeclareThrowsException"/>
                            <rule ref="rulesets/java/design.xml/SimpleDateFormatNeedsLocale"/>
                            <rule ref="rulesets/java/junit.xml/SimplifyBooleanAssertion"/>
                            <rule ref="rulesets/java/design.xml/SimplifyBooleanExpressions"/>
                            <rule ref="rulesets/java/design.xml/SimplifyBooleanReturns"/>
                            <rule ref="rulesets/java/design.xml/SimplifyConditional"/>
                            <rule ref="rulesets/java/optimizations.xml/SimplifyStartsWith"/>
                            <rule ref="rulesets/java/design.xml/SingularField"/>
                            <rule ref="rulesets/java/j2ee.xml/StaticEJBFieldShouldBeFinal"/>
                            <rule ref="rulesets/java/strings.xml/StringBufferInstantiationWithChar"/>
                            <rule ref="rulesets/java/strings.xml/StringInstantiation"/>
                            <rule ref="rulesets/java/strings.xml/StringToString"/>
                            <rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName"/>
                            <rule ref="rulesets/java/naming.xml/SuspiciousEqualsMethodName"/>
                            <rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName"/>
                            <rule ref="rulesets/java/controversial.xml/SuspiciousOctalEscape"/>
                            <rule ref="rulesets/java/design.xml/SwitchDensity"/>
                            <rule ref="rulesets/java/design.xml/SwitchStmtsShouldHaveDefault"/>
                            <rule ref="rulesets/java/logging-java.xml/SystemPrintln"/>
                            <rule ref="rulesets/plsql/dates.xml/TO_DATEWithoutDateFormat"/>
                            <rule ref="rulesets/plsql/dates.xml/TO_DATE_TO_CHAR"/>
                            <rule ref="rulesets/plsql/dates.xml/TO_TIMESTAMPWithoutDateFormat"/>
                            <rule ref="rulesets/java/junit.xml/TestClassWithoutTestCases"/>
                            <rule ref="rulesets/plsql/TomKytesDespair.xml/TomKytesDespair"/>
                            <rule ref="rulesets/java/design.xml/TooFewBranchesForASwitchStatement"/>
                            <rule ref="rulesets/plsql/codesize.xml/TooManyFields"/>
                            <rule ref="rulesets/java/codesize.xml/TooManyFields"/>
                            <rule ref="rulesets/plsql/codesize.xml/TooManyMethods"/>
                            <rule ref="rulesets/java/design.xml/UncommentedEmptyMethod"/>
                            <rule ref="rulesets/java/basic.xml/UnconditionalIfStatement"/>
                            <rule ref="rulesets/ecmascript/unnecessary.xml/UnnecessaryBlock"/>
                            <rule ref="rulesets/java/junit.xml/UnnecessaryBooleanAssertion"/>
                            <rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange"/>
                            <rule ref="rulesets/java/controversial.xml/UnnecessaryConstructor"/>
                            <rule ref="rulesets/java/basic.xml/UnnecessaryConversionTemporary"/>
                            <rule ref="rulesets/java/basic.xml/UnnecessaryFinalModifier"/>
                            <rule ref="rulesets/java/imports.xml/UnnecessaryFullyQualifiedName"/>
                            <rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn"/>
                            <rule ref="rulesets/ecmascript/unnecessary.xml/UnnecessaryParentheses"/>
                            <rule ref="rulesets/java/controversial.xml/UnnecessaryParentheses"/>
                            <rule ref="rulesets/java/basic.xml/UnnecessaryReturn"/>
                            <rule ref="rulesets/java/optimizations.xml/UnnecessaryWrapperObjectCreation"/>
                            <rule ref="rulesets/ecmascript/basic.xml/UnreachableCode"/>
                            <rule ref="rulesets/java/design.xml/UnsynchronizedStaticDateFormatter"/>
                            <rule ref="rulesets/java/unusedcode.xml/UnusedFormalParameter"/>
                            <rule ref="rulesets/java/imports.xml/UnusedImports"/>
                            <rule ref="rulesets/java/unusedcode.xml/UnusedLocalVariable"/>
                            <rule ref="rulesets/vm/basic.xml/UnusedMacroParameter"/>
                            <rule ref="rulesets/java/unusedcode.xml/UnusedModifier"/>
                            <rule ref="rulesets/java/basic.xml/UnusedNullCheckInEquals"/>
                            <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField"/>
                            <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateMethod"/>
                            <rule ref="rulesets/java/optimizations.xml/UseArrayListInsteadOfVector"/>
                            <rule ref="rulesets/java/optimizations.xml/UseArraysAsList"/>
                            <rule ref="rulesets/java/junit.xml/UseAssertEqualsInsteadOfAssertTrue"/>
                            <rule ref="rulesets/java/junit.xml/UseAssertNullInsteadOfAssertTrue"/>
                            <rule ref="rulesets/java/junit.xml/UseAssertSameInsteadOfAssertTrue"/>
                            <rule ref="rulesets/java/junit.xml/UseAssertTrueInsteadOfAssertEquals"/>
                            <rule ref="rulesets/ecmascript/basic.xml/UseBaseWithParseInt"/>
                            <rule ref="rulesets/java/design.xml/UseCollectionIsEmpty"/>
                            <rule ref="rulesets/xsl/xpath.xml/UseConcatOnce"/>
                            <rule ref="rulesets/java/logging-jakarta-commons.xml/UseCorrectExceptionLogging"/>
                            <rule ref="rulesets/java/strings.xml/UseEqualsToCompareStrings"/>
                            <rule ref="rulesets/java/strings.xml/UseIndexOfChar"/>
                            <rule ref="rulesets/java/design.xml/UseLocaleWithCaseConversions"/>
                            <rule ref="rulesets/java/design.xml/UseNotifyAllInsteadOfNotify"/>
                            <rule ref="rulesets/java/controversial.xml/UseObjectForClearerAPI"/>
                            <rule ref="rulesets/java/j2ee.xml/UseProperClassLoader"/>
                            <rule ref="rulesets/java/optimizations.xml/UseStringBufferForStringAppends"/>
                            <rule ref="rulesets/java/strings.xml/UseStringBufferLength"/>
                            <rule ref="rulesets/java/design.xml/UseUtilityClass"/>
                            <rule ref="rulesets/java/basic.xml/UselessOperationOnImmutable"/>
                            <rule ref="rulesets/java/basic.xml/UselessParentheses"/>
                            <rule ref="rulesets/java/strings.xml/UselessStringValueOf"/>
                            <rule ref="rulesets/java/braces.xml/WhileLoopsMustUseBraces"/>
                            <rule ref="rulesets/ecmascript/braces.xml/WhileLoopsMustUseBraces"/>
                        </rulesets>
                        <linkXRef>false</linkXRef>
                        <excludeRoots>
                            <excludeRoot>target/generated-sources/openapi</excludeRoot>
                        </excludeRoots>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>compile</phase>
                            <goals>
                                <goal>cpd</goal>
                                <goal>cpd-check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/ut/**/*</include>
                            </includes>
                            <skipTests>false</skipTests>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <id>unpack-openapi</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includes>**/*.yaml</includes>
                            <outputDirectory>${project.basedir}/src/main/resources</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>6.3.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>
                                ${project.basedir}/src/main/resources/static/openapi.yaml
                            </inputSpec>
                            <generatorName>spring</generatorName>
                            <apiPackage>es.technical.test.microservices.prices.openapi.api</apiPackage>
                            <modelPackage>es.technical.test.microservices.prices.openapi.model</modelPackage>
                            <supportingFilesToGenerate>
                                ApiUtil.java
                            </supportingFilesToGenerate>
                            <configOptions>
                                <delegatePattern>true</delegatePattern>
                                <serializableModel>true</serializableModel>
                                <useJakartaEe>true</useJakartaEe>
                                <useSpringBoot3>true</useSpringBoot3>
                            </configOptions>
                            <typeMappings>
                                <typeMapping>DateTime=LocalDateTime</typeMapping>
                                <typeMapping>Date=LocalDate</typeMapping>
                            </typeMappings>
                            <importMappings>
                                <importMapping>LocalDateTime=java.time.LocalDateTime</importMapping>
                                <importMapping>LocalDate=java.time.LocalDate</importMapping>
                            </importMappings>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>${lombok.mapstruct.binding.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- Profiles-->
    <profiles>

        <!-- Profile to add coverage to the testing -->
        <profile>
            <id>coverage</id>
            <activation>
                <property>
                    <name>!skipCoverage</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <!-- UT -->
                            <execution>
                                <id>before-unit-test-execution</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <destFile>${project.build.directory}/site/jacoco/unit-tests.exec</destFile>
                                    <propertyName>surefire.jacoco.args</propertyName>
                                </configuration>
                            </execution>
                            <execution>
                                <id>after-unit-test-execution</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <dataFile>${project.build.directory}/site/jacoco/unit-tests.exec</dataFile>
                                    <outputDirectory>
                                        ${project.reporting.outputDirectory}/jacoco/unit-test-coverage-report
                                    </outputDirectory>
                                </configuration>
                            </execution>
                            <!-- IT -->
                            <execution>
                                <id>before-integration-test-execution</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <destFile>${project.build.directory}/site/jacoco/integration-tests.exec</destFile>
                                    <propertyName>failsafe.jacoco.args</propertyName>
                                </configuration>
                            </execution>
                            <execution>
                                <id>after-integration-test-execution</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <dataFile>${project.build.directory}/site/jacoco/integration-tests.exec</dataFile>
                                    <outputDirectory>
                                        ${project.reporting.outputDirectory}/jacoco/integration-test-coverage-report
                                    </outputDirectory>
                                </configuration>
                            </execution>
                            <!-- Merged Report -->
                            <execution>
                                <id>merge-unit-and-integration</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>merge</goal>
                                </goals>
                                <configuration>
                                    <fileSets>
                                        <fileSet>
                                            <directory>${project.build.directory}/site/jacoco/</directory>
                                            <includes>
                                                <include>*.exec</include>
                                            </includes>
                                        </fileSet>
                                    </fileSets>
                                    <destFile>${project.build.directory}/site/jacoco/merged.exec</destFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-merged-report</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <dataFile>${project.build.directory}/site/jacoco/merged.exec</dataFile>
                                    <outputDirectory>
                                        ${project.reporting.outputDirectory}/jacoco/merged-test-coverage-report
                                    </outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- UT -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven-surefire-plugin.version}</version>
                        <configuration>
                            <argLine>@{surefire.jacoco.args}</argLine>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Profile to perform static code analysis and style checks -->
        <profile>
            <id>codeAnalysis</id>
            <activation>
                <property>
                    <name>!skipCodeAnalysis</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <configuration>
                            <sourceDirectories>
                                <sourceDirectory>src/main/java</sourceDirectory>
                            </sourceDirectories>
                            <excludes>${project.basedir}/target</excludes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <configuration>
                            <failBuildOnAnyVulnerability>true</failBuildOnAnyVulnerability>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                        <configuration>
                            <excludeFilterFile>${project.basedir}/spotbugs-filters.xml</excludeFilterFile>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-pmd-plugin</artifactId>
                        <configuration>
                            <excludeRoots>
                                <excludeRoot>${project.basedir}/target/generated-sources</excludeRoot>
                            </excludeRoots>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Profile to execute integration tests -->
        <profile>
            <id>integrationTest</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <argLine>@{failsafe.jacoco.args}</argLine>
                                    <classesDirectory>
                                        ${project.build.directory}/${project.artifactId}-${project.version}.jar.original
                                    </classesDirectory>
                                    <includes>
                                        <include>**/it/**</include>
                                    </includes>
                                    <skipTests>false</skipTests>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Profile to analyse the project with sonar -->
        <profile>
            <id>sonar</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <sonar.projectKey>${projectKey}</sonar.projectKey>
                <sonar.host.url>${host.url}</sonar.host.url>
                <sonar.token>${token}</sonar.token>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonarsource.scanner.maven</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>1.0.0</version>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                                <configuration>
                                    <files>
                                        <file>sonar-project.properties</file>
                                    </files>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

</project>
